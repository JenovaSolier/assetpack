"use strict";(self.webpackChunk_assetpack_docs=self.webpackChunk_assetpack_docs||[]).push([[52],{5178:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>d,contentTitle:()=>r,default:()=>h,frontMatter:()=>a,metadata:()=>l,toc:()=>o});var i=t(1085),n=t(1184);const a={sidebar_position:5},r="Manifest",l={id:"guide/pipes/manifest",title:"Manifest",description:"This plugin generates a manifest file so you can easily load your assets in the browser. The manifest file contains a list of all the assets in your project, including their paths and aliases.",source:"@site/docs/guide/pipes/manifest.mdx",sourceDirName:"guide/pipes",slug:"/guide/pipes/manifest",permalink:"/assetpack/docs/guide/pipes/manifest",draft:!1,unlisted:!1,editUrl:"https://github.com/pixijs/assetpack/tree/main/packages/docs/docs/guide/pipes/manifest.mdx",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"guide",previous:{title:"Mipmaps",permalink:"/assetpack/docs/guide/pipes/mipmap"},next:{title:"Spine",permalink:"/assetpack/docs/guide/pipes/spine"}},d={},o=[{value:"API",id:"api",level:2},{value:"Example",id:"example",level:2},{value:"Tags",id:"tags",level:2},{value:"Usage with Spine plugin",id:"usage-with-spine-plugin",level:2}];function c(e){const s={a:"a",code:"code",h1:"h1",h2:"h2",hr:"hr",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,n.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.h1,{id:"manifest",children:"Manifest"}),"\n",(0,i.jsx)(s.p,{children:"This plugin generates a manifest file so you can easily load your assets in the browser. The manifest file contains a list of all the assets in your project, including their paths and aliases."}),"\n",(0,i.jsx)(s.p,{children:"The plugin also allows you to create bundles of assets by using tags in your folder structure. This is useful for grouping assets together, such as images for a specific scene or level."}),"\n",(0,i.jsx)(s.p,{children:"We believe this plugin is a must-have for any PixiJS project, as it simplifies the process of loading assets and helps you manage your project more efficiently."}),"\n",(0,i.jsx)(s.h2,{id:"api",children:"API"}),"\n",(0,i.jsxs)(s.table,{children:[(0,i.jsx)(s.thead,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.th,{children:"Option"}),(0,i.jsx)(s.th,{children:"Type"}),(0,i.jsx)(s.th,{children:"Description"})]})}),(0,i.jsxs)(s.tbody,{children:[(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"output"}),(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"string"})}),(0,i.jsxs)(s.td,{children:["The path to the manifest file.",(0,i.jsx)("br",{}),"Defaults to the output folder defined in your config."]})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"createShortcuts"}),(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"boolean"})}),(0,i.jsxs)(s.td,{children:["Whether to create the shortest possible alias for an asset.",(0,i.jsx)("br",{}),"Defaults to ",(0,i.jsx)(s.code,{children:"false"}),"."]})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"trimExtensions"}),(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"boolean"})}),(0,i.jsxs)(s.td,{children:["Whether to trim the extensions from the asset aliases. ",(0,i.jsx)("br",{}),"Defaults to ",(0,i.jsx)(s.code,{children:"false"}),"."]})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:"includeMetaData"}),(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"boolean"})}),(0,i.jsxs)(s.td,{children:["Whether to include the tags the asset has used in the manifest file. ",(0,i.jsx)("br",{}),"Defaults to ",(0,i.jsx)(s.code,{children:"true"}),"."]})]})]})]}),"\n",(0,i.jsx)(s.h2,{id:"example",children:"Example"}),"\n",(0,i.jsx)("div",{style:{display:"flex",justifyContent:"center",alignItems:"center",paddingBottom:"24px"},children:(0,i.jsx)("img",{src:"/assetpack/screenshots/manifest/manifest-tags.png",alt:"Tags Example",style:{borderRadius:"12px",boxShadow:"0 0 20px hsla(192, 84%, 40%, 0.5)"}})}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-js",children:'import { pixiManifest } from "@assetpack/core";\n\nexport default {\n  ...\n  pipes: {\n    ...\n    // These options are the default values, all options shown here are optional\n    // This should be the last pipe in the list\n    pixiManifest({\n      output: "manifest.json",\n      createShortcuts: false,\n      trimExtensions: false,\n      includeMetaData: true,\n    })\n  },\n};\n'})}),"\n",(0,i.jsx)(s.h2,{id:"tags",children:"Tags"}),"\n",(0,i.jsxs)(s.table,{children:[(0,i.jsx)(s.thead,{children:(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.th,{children:"Tag"}),(0,i.jsx)(s.th,{children:"Folder/File"}),(0,i.jsx)(s.th,{children:"Description"})]})}),(0,i.jsxs)(s.tbody,{children:[(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"m"})}),(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"folder"})}),(0,i.jsx)(s.td,{children:"Generates a bundle entry in the manifest file."})]}),(0,i.jsxs)(s.tr,{children:[(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"mIgnore"})}),(0,i.jsx)(s.td,{children:(0,i.jsx)(s.code,{children:"both"})}),(0,i.jsx)(s.td,{children:"Ignores the folder/file from the manifest file."})]})]})]}),"\n",(0,i.jsx)(s.hr,{}),"\n",(0,i.jsx)(s.h2,{id:"usage-with-spine-plugin",children:"Usage with Spine plugin"}),"\n",(0,i.jsxs)(s.p,{children:["When using the ",(0,i.jsx)(s.a,{href:"/docs/guide/pipes/spine",children:"Spine plugins"}),", you should use the ",(0,i.jsx)(s.code,{children:"spineAtlasManifestMod"})," plugin to augment the manifest file with the spine atlas files. This ensures that the spine atlas files are included in the manifest."]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{className:"language-js",children:'import { pixiManifest, spineAtlasManifestMod } from "@assetpack/core";\n\nexport default {\n  ...\n  pipes: [\n    ...\n    pixiManifest(),\n    spineAtlasManifestMod(),\n  ]\n};\n'})})]})}function h(e={}){const{wrapper:s}={...(0,n.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},1184:(e,s,t)=>{t.d(s,{R:()=>r,x:()=>l});var i=t(4041);const n={},a=i.createContext(n);function r(e){const s=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:r(e.components),i.createElement(a.Provider,{value:s},e.children)}}}]);